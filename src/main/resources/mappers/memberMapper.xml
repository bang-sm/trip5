<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.memberMapper">

	<!-- 회원가입 -->
	<insert id="signup" parameterType="com.sm.domain.MemberVO">
		INSERT INTO member
			(memberpass,
			 memberemail,
			 membernick,
			 memberregdate)
		VALUES
			(#{memberpass},
			#{memberemail},
			#{membernick},
			now());
	</insert>
	
	<!-- 회원가입 카카오 -->
	<insert id="kakaoSignup" parameterType="com.sm.domain.MemberVO">
		INSERT INTO member
			(memberpass,
		 	memberemail,
		 	membernick,
		 	memberregdate,
		 	kakaoOk)
		VALUES
			(#{memberpass},
			#{memberemail},
			#{membernick},
			now(),
			#{kakaoOk});
	</insert>
	
	<!-- 카카오로그인시 kakaoOk 변경-->
	<insert id="kakaoOk" parameterType="com.sm.domain.MemberVO">
		UPDATE 
			member 
		set 
			kakaoOk ='Y' 
		WHERE 
			memberemail = #{memberemail};
	</insert>

	<!-- 아이디  찾기 -->
	<select id="findById" resultType="com.sm.domain.MemberVO"
		parameterType="String">
		SELECT
			*
		FROM
			member
		WHERE
			memberemail=#{memberemail}
	</select>

	<!-- 아이디 확인 -->
	<select id="idCheck" resultType="com.sm.domain.MemberVO">
		select 
			memberemail 
		from 
			member
		where 
			memberemail = #{memberemail}
	</select>

	<!-- uuid 확인 -->
	<select id="uuidCheck" resultType="int">
		select 
			uuid 
		from 
			member
		where 
			memberemail = #{memberemail}
	</select>

	<!-- 회원 수 -->
	<select id="userCnt" resultType="int">
		select
			count(*)
		from
			member
	</select>

	<!-- 회원 페이징 -->
	<select id="memberList" parameterType="Map" resultType="com.sm.domain.MemberVO">
		SELECT 
			*
		FROM 
			member
		ORDER BY
			uuid ASC
		LIMIT #{startRow},#{rowPerPage};
	</select>

	<!-- 회원 페이징 정보 출력-->
	<update id="addBlackList" parameterType="Map">
		UPDATE
			member
 	<choose>
	    <when test="msgBlackList.equals('추가')">	
			set
				adminBlackList ='Y'
		</when>
		
		<when test="msgBlackList.equals('삭제')">
			set
				adminBlackList ='N'
		</when>
	</choose>		
		WHERE uuid = ${uuid};
	</update>
	
	<!-- 카카오로그인,TRIP5 로그인 count -->
	<select id="userType" resultType="Map">
		SELECT 
			COUNT(CASE WHEN kakaoOk='Y' THEN 1 END) AS kakao,
			COUNT(CASE WHEN kakaoOk='N' THEN 1 END) As trip5
		FROM 
			member;
	</select>

	<!-- ///////////////////////////////////////////////////////// -->
	<!-- 방문자 수 -->
	<!-- ///////////////////////////////////////////////////////// -->
	
	<!-- 가입 타입별 일일 접속자 통계 -->
	<insert id="insertUserCount" parameterType="MAP">
		INSERT INTO 
			`visitmembers`(uuid, visitdate, ipaddr, kakaoOk)
		VALUES 
			(${uuid}, curdate(), '${ipaddr}', '${kakaoOk}');
	</insert>
	
	<!-- 일일접속자 insert 조건 -->
	<select id="insertCondition" parameterType="Map" resultType="com.sm.domain.VisitmembersVO">
		SELECT
			ifnull(uuid, 0) as uuid,
			ifnull(visitdate, '0') as visitdate,
			ifnull(ipaddr, '0') as ipaddr,
			ifnull(kakaoOk, '0') as kakaoOk
		FROM 
			visitmembers
		WHERE
			uuid = ${uuid}
		AND
			visitdate = '${visitdate}';
	</select>

	<!-- 일일접속자 Count-->
	<select id="adminUserCount" resultType="Map">
		SELECT 
			COUNT(CASE WHEN kakaoOk ='Y' THEN 1 END) AS KAKAO, 
			COUNT(CASE WHEN kakaoOk ='N' THEN 1 END) AS TRIP5
		FROM visitmembers;
	</select>

	<!-- 월별 가입자 Count-->
	<select id="adminUserSignUp" resultType="Map">

		SELECT 
			CONCAT(m, '월') AS `월별`, cnt
		FROM (
		    SELECT 
		    	MONTH(memberregdate) AS m, COUNT(*) AS cnt
		    FROM 
		    	member
		    WHERE
		    	memberregdate &gt;= '2020-01-01' 
		    AND 
		    	memberregdate &lt; '2021-01-01'
		    GROUP BY 
		    	MONTH(memberregdate)
		) adminUserSignUp;
	</select>
	
	<!-- ///////////////////////////////////////////////////////// -->
	<!-- 프로필  -->
	<!-- ///////////////////////////////////////////////////////// -->
	
	<!-- 사진 변경 -->
	<insert id="profileImg" parameterType="Map">
		UPDATE 
			member
		set 
			photoPath ='${photoPath}',
			photoOriginalName='${photoOriginalName}',
			photoCustomName='${photoCustomName}',
		 	photoFileSize='${photoFileSize}'
		WHERE
			uuid = ${mbUuid};
	</insert>
	
	<!-- ///////////////////////////////////////////////////////// -->
	<!-- 비밀번호 변경 -->
	<!-- ///////////////////////////////////////////////////////// -->
	
	<update id="updateNewPass" parameterType="map">
	
	UPDATE
		member
	set
		memberpass = #{memberpass}
	WHERE
		uuid = #{uuid}
	
	</update>

	<!-- 닉네임 변경 -->
	<insert id="myinfoNickChange" parameterType="Map">
		UPDATE 
			member
		set 
			membernick = '${membernick}'
		WHERE
			uuid = ${uuid};
	</insert>

	<!-- 사진 path 정보  -->
	<select id="imgPath" parameterType="int" resultType="String">
		SELECT 
			photoCustomName
		from
			`member` m
		where
			uuid = ${uuid};
	</select>
	
	<!-- 멤버 닉 -->
	<select id="userNickName" parameterType="int" resultType="String">
		select
			membernick
		from
			member
		where
			uuid = ${uuid};
	</select>

	<!-- 멤버 이미지 삭제 -->
	<select id="deletUserImg" parameterType="int">
		UPDATE 
			member
		set 
			photoPath ='profile.jpg',
			photoOriginalName='',
			photoCustomName='profile.jpg',
		 	photoFileSize=''
		WHERE
			uuid = ${mbUuid};
	</select>

</mapper>