<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.travelMapper">

	<!-- 스토리등록 -->
	<insert id="storyRegist" parameterType="com.sm.domain.TravelVO">
		INSERT INTO travel_story(
			tsid,
			uuid,
			tstitle,
			tslike,
			tsregdate,
			tshashtagone,
			tsstartdate,
			tsenddate
			)
		VALUES(
			tsid,
			9,
			#{tstitle},
			#{tslike},
			tsregdate,
			#{tshashtagone},
			#{tsstartdate},
			#{tsenddate},
			tsfare
			);
	</insert>
	<insert id="story_detail_Regist">
	
		<!-- 방금 insert된  부모의 키값을 알아오기 위한 쿼리문 -->
	 	<selectKey resultType="int" keyProperty="tsid" order="BEFORE">
        	SELECT MAX(tsid) FROM travel_story        
    	</selectKey>
			INSERT INTO travel_story_info
			(
				tsiid,
				tsid,
				tsidDay,
				tsititle,
				tsicomment
			)
			VALUES
			<foreach collection="infoList" item="type" separator=",">
			(
				tsiid,
				#{tsid},
				#{type.tsidDay},
				#{type.tsititle},
				#{type.tsicomment}
			)
			</foreach>
	</insert>
	
	<insert id="travel_firstSave" useGeneratedKeys="true" keyProperty="tsid"  parameterType="com.sm.domain.TravelVO">
		INSERT INTO travel_story VALUES(
			tsid,
			#{uuid},
			#{tstitle},
			tslike,
			now(),
			'해쉬태그',
			#{tsstartdate},
			#{tsenddate},
			tempsave
		)
	</insert>
	
	<insert id="travel_info_temp_save" useGeneratedKeys="true" keyProperty="tsiid" parameterType="com.sm.domain.TravelInfoVO">
		INSERT INTO travel_story_info VALUES(
			tsiid,
			#{tsid},
			#{tsidDay ,jdbcType=INTEGER},
			#{tsititle ,jdbcType=VARCHAR},
			#{tsicomment ,jdbcType=VARCHAR}
		)
	</insert>
	
	<select id="getTravelStory" parameterType="hashmap" resultType="com.sm.domain.TravelVO">
		SELECT 	
			tsid,
			uuid,
			tstitle,
			tslike,
			tsregdate,
			tshashtagone,
			tsstartdate,
			tsenddate,
			DATEDIFF(tsenddate ,tsstartdate )+1 AS datediff,
			tempsave 
		FROM
			travel_story 
		WHERE
			tsid=#{tsid} AND uuid=#{uuid};
	</select>
	
	<select id="getTravelInfo" resultType="com.sm.domain.TravelInfoVO">
		SELECT 
			*
		FROM
			travel_story_info 
		WHERE
			tsid=#{tsid};
	</select>
	<select id="getTravelRootInfo" resultType="com.sm.domain.TravelInfoRootVO">
		SELECT 
			*
		FROM
			tsi_root 
		WHERE
			tsid=#{tsid};
	</select>
	
	<update id="tempSaveTravelInfo" parameterType="Map">
		INSERT INTO travel_story_info
			(
				tsiid,
				tsid,
				tsidDay,
				tsititle,
				tsicomment
			)
			VALUES
			<foreach collection="infoList" item="type" separator=",">
			(
				#{type.tsiid},
				#{type.tsid},
				#{type.tsidDay},
				#{type.tsititle},
				#{type.tsicomment}
			)
			</foreach>
			ON DUPLICATE KEY UPDATE
				tsititle = values(tsititle),
				tsicomment = values(tsicomment)
	</update>
	
	<update id="tempSaveTravleRoot" parameterType="Map">
		INSERT INTO tsi_root
			(
				tsid,
				tsirootname,
				tsirootorder,
				tsirootvehicle
			)
			VALUES
			<foreach collection="rootList" item="type" separator=",">
			(
				#{type.tsid},
				#{type.tsirootname,jdbcType=VARCHAR},
				#{type.tsirootorder,jdbcType=INTEGER},
				#{type.tsirootvehicle,jdbcType=VARCHAR}
			)
			</foreach>
			ON DUPLICATE KEY UPDATE
				tsirootname = values(tsirootname),
				tsirootorder = values(tsirootorder),
				tsirootvehicle = values(tsirootvehicle)
	</update>
	
	<delete id="travel_root_delete">
		DELETE FROM tsi_root
		WHERE
			tsid=#{tsid} AND tsirootorder=#{tsirootorder}
	</delete>
	
	<insert id="travel_reply_save" parameterType="Map" useGeneratedKeys="true" keyProperty="ts_reply_id">
		INSERT INTO travel_story_reply 
		VALUES
		(
			ts_reply_id,
			#{uuid},
			#{reply.tsReplyComment},
			#{reply.tsId},
			now()
		)
	</insert>
	
	<select id="getTravelReply" parameterType="hashmap"  resultType="com.sm.domain.TravelReplyVO">
		SELECT 
			ts_reply_id ,
			uuid,
			(SELECT membernick FROM `member` WHERE uuid=a.uuid) AS memberName,
			ts_reply_comment ,
			ts_id ,
			reply_regdate,
			(SELECT count(*) FROM travel_story_reply WHERE ts_id=#{tsid}) AS count
		FROM 
			travel_story_reply a
		WHERE
		     ts_id=#{tsid}
		;
	</select>
	<delete id="delete_my_reply" parameterType="map">
		DELETE FROM travel_story_reply
		WHERE
			uuid=#{uuid} AND ts_reply_id=#{ts_reply_id}
			
	</delete>
	<update id="travel_like">
		UPDATE travel_story
		SET
			tslike=tslike+1
		WHERE
			tsid=#{tsid}
	</update>
	
	<select id="likeCount" resultType="int">
		SELECT
			tslike
		FROM 
			travel_story
		WHERE 
			tsid=#{tsid}
	</select>
	
	<select id="bookmarkCheck" parameterType="map" resultType="int">
		SELECT
			count(*)
		FROM
			bookmark
		WHERE 
			uuid=#{uuid} AND ts_id =#{tsid};
	</select>
	<insert id="bookmark" parameterType="map">
		INSERT INTO bookmark 
		VALUES
		(
			#{uuid},
			#{tsid}
		)
	</insert>
	<delete id="bookmarkDelete" parameterType="map">
		DELETE FROM bookmark
		WHERE
			uuid=#{uuid} AND ts_id=#{tsid}
	</delete>
	<insert id="follow" parameterType="map">
		INSERT INTO follow 
		VALUES
		(
			#{uuid},
			#{followId},
			status
		)
	</insert>
	<select id="followCheck" parameterType="map" resultType="int">
		SELECT
		 	count(*) 
	 	FROM 
 			follow 
		WHERE 
			uuid=#{uuid} AND follow_uuid =#{followId};
	</select>
	<delete id="followDelete">
		DELETE FROM follow
		WHERE
			uuid=#{uuid} AND follow_uuid=#{followId}
	</delete>
	
	<!-- 임시저장되어있는 나의 일지 개수 -->	
	<select id="tempTravelCheck" parameterType="int" resultType="int">
		SELECT
			count(*)
		FROM
			travel_story 
		WHERE
			uuid=#{uuid} AND tempsave ='Y';
	</select>
	
	<insert id="photo_insert" parameterType="map">
		INSERT INTO photo 
		VALUES
		(
			<choose>
				<when test="photo_id ==null">
					photo_id,
				</when>
				<otherwise>
					#{photoId},
				</otherwise>
			</choose>
			#{photo_custom_name},
			#{photo_original_name},
			#{photo_path},
			#{photo_file_size},
			#{ts_id},
			#{photoMain}
		)
		ON DUPLICATE KEY UPDATE
			photo_custom_name = values(photo_custom_name),
			photo_original_name = values(photo_original_name),
			photo_path = values(photo_path),
			photo_file_size = values(photo_file_size),
			ts_id = values(ts_id),
			photo_main=values(photoMain)
	</insert>
	
	<select id="getTravelImage" resultType="com.sm.domain.PhotoVO">
		SELECT
			*
		FROM
			photo
		WHERE 
			ts_id=#{tsid}
	</select>
	
	<delete id="imageDelete">
		DELETE FROM photo
		WHERE
			photo_id=#{photoId}
	</delete>
	
	<update id="tempComplete">
		UPDATE
			travel_story
		SET 
			tempsave='N' 
		WHERE
			tsid=#{tsid}
	</update>
	
	<select id="getMyTravelList" resultType="com.sm.domain.TravelVO">
		SELECT
			tsid,
			tstitle,
			tsregdate,
			tslike,
			uuid,
			(SELECT count(*) FROM bookmark WHERE ts_id=a.tsid ) AS bookmark,
			(SELECT photo_custom_name FROM photo WHERE ts_id=a.tsid AND photo_main ='Y') AS photo_main
		FROM 
			travel_story a
		WHERE 
			uuid=#{uuid}  AND tempsave ='N'
		ORDER BY 
			tsregdate DESC;
	</select>
	
	<select id="getMyTravelTop3" resultType="com.sm.domain.TravelVO">
		SELECT
			tsid,
			tstitle,
			tsregdate,
			tslike,
			uuid,
			(SELECT count(*) FROM bookmark WHERE ts_id=a.tsid ) AS bookmark,
			(SELECT photo_custom_name FROM photo WHERE ts_id=a.tsid AND photo_main ='Y') AS photo_main
		FROM 
			travel_story a
		WHERE 
			uuid =#{uuid} AND tempsave ='N'
		ORDER BY tslike 
		LIMIT 3;
	</select>
	
	<select id="findUser" resultType="int">
		SELECT
			count(*)
		FROM
			member
		WHERE
			uuid=#{uuid}
	</select>
	
	<select id="getMyFollow" resultType="int">
		SELECT 
			count(*)
		FROM 
			follow 
		WHERE 
			follow_uuid =#{uuid}; 
	</select>
	<select id="getMyTotalLike" resultType="int">
		SELECT 
			IFNULL(sum(tslike),0) AS totalLike 
		FROM 
			travel_story
		WHERE 
			uuid=#{uuid};
	</select>
	<select id="getMyTravelCount" resultType="int">
		SELECT
			count(*) 
	 	FROM 
	 		travel_story
 		WHERE 
 			uuid =#{uuid} AND tempsave = 'N';
	</select>
	
	<select id="getTravelRootList" resultType="com.sm.domain.TravelInfoRootVO">
		SELECT
			* 
		FROM 
			tsi_root 
		WHERE
			tsid = #{tsid}
		ORDER BY
			tsirootorder 
		;
	</select>
	
	<select id="mainTravleList" resultType="com.sm.domain.TravelVO">
		SELECT
			tsid,
			tstitle,
			tsregdate,
			tslike,
			uuid,
			(SELECT count(*) FROM bookmark WHERE ts_id=a.tsid ) AS bookmark,
			(SELECT photo_custom_name FROM photo WHERE ts_id=a.tsid AND photo_main ='Y') AS photo_main
		FROM 
			travel_story a
		WHERE
			tempsave ='N'
		ORDER BY tsregdate DESC
	</select>
	
<select id = "selectmaintravelListOrderbyTslike" resultType="com.sm.domain.TravelVO">

	SELECT
		tsid,
		tstitle,
		tsregdate,
		tslike,
		uuid,
		(SELECT count(*) FROM bookmark WHERE ts_id=a.tsid ) AS bookmark,
		(SELECT photo_custom_name FROM photo WHERE ts_id=a.tsid AND photo_main ='Y') AS photo_main
	FROM 
		travel_story a
	WHERE
		tempsave ='N'
	ORDER BY 
		tslike DESC

</select>

<select id="selectmaintravelListOrderbyTsView" resultType="com.sm.domain.TravelVO">
	
	SELECT
		tsid,
		tstitle,
		tsregdate,
		tslike,
		uuid,
		(SELECT count(*) FROM bookmark WHERE ts_id=a.tsid ) AS bookmark,
		(SELECT photo_custom_name FROM photo WHERE ts_id=a.tsid AND photo_main ='Y') AS photo_main
	FROM 
		travel_story a
	WHERE
		tempsave ='N'
	ORDER BY 
		bookmark DESC
	;
	
</select>

<select id="getUserInfo" resultType="com.sm.domain.MemberVO">
		SELECT 
			uuid,
			membernick, 
			photoCustomName,
			photoPath,
			photoOriginalName
		FROM
			member
		WHERE
			uuid=#{uuid}	
		 ;
	</select>

</mapper>